//
// This file was automatically generated by wxrc, do not edit by hand.
//

#include <wx/wxprec.h>

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#include <wx/filesys.h>
#include <wx/fs_mem.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_all.h>

#if wxCHECK_VERSION(2, 8, 5) && wxABI_VERSION >= 20805
#define XRC_ADD_FILE(name, data, size, mime) wxMemoryFSHandler::AddFileWithMimeType(name, data, size, mime)
#else
#define XRC_ADD_FILE(name, data, size, mime) wxMemoryFSHandler::AddFile(name, data, size)
#endif

static size_t xml_res_size_0 = 504;
static unsigned char xml_res_file_0[] = { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 24, 0,
    0, 0, 24, 8, 6, 0, 0, 0, 224, 119, 61, 248, 0, 0, 0, 4, 115, 66, 73, 84, 8, 8, 8, 8, 124, 8, 100, 136, 0, 0, 0, 9,
    112, 72, 89, 115, 0, 0, 13, 215, 0, 0, 13, 215, 1, 66, 40, 155, 120, 0, 0, 0, 25, 116, 69, 88, 116, 83, 111, 102,
    116, 119, 97, 114, 101, 0, 119, 119, 119, 46, 105, 110, 107, 115, 99, 97, 112, 101, 46, 111, 114, 103, 155, 238, 60,
    26, 0, 0, 1, 117, 73, 68, 65, 84, 72, 137, 189, 148, 75, 78, 195, 48, 20, 69, 175, 163, 231, 142, 90, 117, 33, 253,
    100, 17, 101, 8, 148, 197, 0, 2, 230, 8, 177, 3, 36, 4, 18, 226, 167, 174, 129, 143, 84, 209, 50, 68, 52, 221, 72,
    37, 42, 37, 113, 225, 153, 1, 106, 72, 82, 199, 141, 139, 202, 29, 217, 241, 179, 207, 243, 205, 149, 129, 53, 75,
    204, 7, 189, 222, 253, 7, 107, 93, 21, 66, 64, 8, 241, 179, 144, 140, 5, 32, 0, 145, 155, 123, 158, 55, 237, 110,
    239, 212, 108, 0, 154, 15, 162, 56, 170, 110, 109, 118, 157, 186, 123, 124, 122, 168, 46, 171, 73, 0, 74, 41, 104,
    173, 49, 26, 141, 74, 29, 238, 251, 62, 148, 82, 75, 235, 50, 0, 102, 70, 171, 213, 42, 5, 96, 102, 40, 21, 187, 0,
    98, 104, 173, 75, 29, 158, 110, 202, 1, 96, 183, 200, 247, 253, 191, 3, 76, 22, 93, 93, 95, 130, 191, 24, 239, 193,
    27, 36, 17, 136, 36, 164, 148, 32, 34, 212, 235, 117, 220, 222, 221, 104, 73, 4, 146, 18, 146, 36, 72, 18, 42, 178,
    50, 237, 116, 54, 106, 198, 27, 228, 53, 153, 76, 176, 191, 123, 184, 180, 211, 180, 134, 195, 65, 146, 174, 4, 48,
    251, 156, 65, 107, 141, 32, 8, 22, 54, 184, 166, 43, 140, 194, 100, 78, 233, 69, 102, 70, 179, 217, 204, 108, 232,
    191, 60, 59, 167, 43, 42, 2, 20, 165, 200, 53, 93, 97, 104, 1, 140, 199, 99, 35, 192, 37, 93, 86, 139, 26, 141, 70,
    166, 120, 240, 218, 183, 90, 196, 204, 11, 223, 34, 219, 13, 76, 114, 182, 104, 149, 127, 96, 74, 87, 94, 237, 118,
    27, 0, 16, 199, 191, 79, 72, 2, 16, 194, 155, 158, 95, 156, 25, 95, 71, 83, 186, 138, 234, 242, 74, 0, 39, 199, 167,
    198, 119, 253, 224, 104, 79, 187, 90, 100, 4, 216, 84, 148, 174, 180, 138, 66, 80, 10, 96, 74, 151, 169, 102, 101,
    192, 191, 88, 180, 54, 128, 45, 93, 182, 61, 43, 119, 228, 170, 111, 19, 14, 220, 254, 50, 184, 85, 165, 0, 0, 0, 0,
    73, 69, 78, 68, 174, 66, 96, 130 };

static size_t xml_res_size_1 = 783;
static unsigned char xml_res_file_1[] = { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 48, 0,
    0, 0, 48, 8, 6, 0, 0, 0, 87, 2, 249, 135, 0, 0, 0, 4, 115, 66, 73, 84, 8, 8, 8, 8, 124, 8, 100, 136, 0, 0, 0, 9,
    112, 72, 89, 115, 0, 0, 27, 175, 0, 0, 27, 175, 1, 94, 26, 145, 28, 0, 0, 0, 25, 116, 69, 88, 116, 83, 111, 102,
    116, 119, 97, 114, 101, 0, 119, 119, 119, 46, 105, 110, 107, 115, 99, 97, 112, 101, 46, 111, 114, 103, 155, 238, 60,
    26, 0, 0, 2, 140, 73, 68, 65, 84, 104, 129, 237, 152, 75, 142, 19, 49, 16, 134, 127, 87, 113, 1, 230, 30, 73, 78,
    16, 164, 89, 3, 202, 85, 0, 9, 9, 113, 0, 132, 196, 9, 144, 16, 59, 152, 17, 43, 4, 91, 30, 82, 194, 48, 75, 148,
    228, 8, 192, 102, 56, 130, 203, 110, 22, 221, 157, 164, 31, 137, 237, 110, 59, 147, 72, 249, 54, 233, 118, 219, 85,
    254, 237, 114, 185, 20, 224, 196, 237, 162, 234, 13, 151, 31, 46, 166, 200, 48, 86, 106, 253, 89, 41, 181, 238, 220,
    250, 172, 86, 150, 42, 207, 142, 239, 200, 212, 108, 50, 153, 220, 235, 35, 224, 78, 189, 193, 136, 25, 175, 231,
    86, 10, 8, 16, 163, 214, 107, 210, 222, 183, 34, 102, 220, 103, 242, 237, 2, 140, 0, 80, 120, 112, 255, 97, 95, 219,
    59, 249, 250, 237, 75, 46, 166, 39, 45, 2, 12, 90, 34, 43, 58, 198, 24, 168, 8, 110, 182, 10, 200, 178, 12, 0, 48,
    159, 207, 251, 123, 217, 96, 52, 26, 173, 252, 36, 20, 128, 149, 128, 242, 55, 22, 165, 189, 180, 2, 54, 12, 151,
    43, 22, 155, 228, 2, 98, 175, 124, 155, 159, 35, 23, 32, 149, 148, 219, 21, 103, 8, 165, 194, 88, 147, 48, 141, 110,
    236, 64, 104, 22, 242, 61, 51, 198, 164, 18, 96, 243, 139, 172, 107, 8, 249, 142, 75, 39, 160, 118, 145, 13, 135,
    195, 157, 6, 62, 125, 254, 136, 155, 127, 55, 96, 34, 16, 17, 230, 203, 95, 32, 162, 226, 157, 65, 68, 32, 38, 112,
    249, 92, 180, 159, 221, 61, 3, 17, 225, 253, 197, 187, 108, 213, 159, 215, 125, 120, 99, 44, 17, 151, 246, 102, 231,
    231, 231, 149, 218, 201, 121, 145, 185, 248, 243, 247, 55, 136, 8, 182, 116, 98, 45, 136, 25, 150, 8, 76, 54, 23,
    97, 9, 150, 237, 134, 8, 11, 107, 25, 204, 249, 51, 81, 209, 191, 24, 155, 219, 43, 250, 91, 2, 177, 45, 236, 219,
    70, 237, 228, 188, 200, 92, 104, 173, 193, 204, 120, 242, 232, 177, 87, 255, 174, 252, 188, 190, 130, 37, 106, 180,
    111, 21, 224, 75, 150, 101, 16, 145, 238, 51, 243, 68, 180, 128, 66, 4, 148, 59, 176, 88, 44, 188, 28, 164, 174,
    157, 180, 104, 176, 143, 128, 250, 132, 124, 67, 41, 117, 237, 36, 34, 126, 33, 84, 199, 149, 133, 166, 63, 190, 87,
    222, 83, 213, 78, 34, 218, 47, 132, 74, 66, 87, 50, 117, 233, 161, 181, 128, 249, 136, 5, 136, 104, 88, 203, 141,
    118, 103, 8, 29, 10, 34, 2, 34, 219, 104, 119, 238, 192, 114, 185, 244, 114, 144, 186, 118, 202, 179, 80, 192, 14,
    116, 205, 66, 161, 248, 142, 19, 45, 176, 28, 176, 3, 37, 131, 193, 96, 231, 247, 171, 235, 105, 229, 221, 149, 181,
    186, 34, 162, 65, 33, 103, 224, 208, 14, 177, 22, 1, 119, 57, 3, 190, 236, 37, 11, 133, 156, 129, 67, 163, 115, 22,
    242, 37, 180, 118, 114, 81, 63, 75, 34, 2, 82, 123, 184, 200, 98, 133, 82, 155, 29, 155, 5, 236, 192, 155, 183, 175,
    59, 57, 78, 149, 133, 182, 209, 38, 96, 6, 32, 248, 95, 227, 212, 135, 120, 27, 13, 1, 47, 95, 188, 10, 250, 191,
    254, 217, 243, 167, 25, 112, 123, 2, 154, 167, 226, 200, 136, 150, 70, 67, 107, 167, 109, 184, 110, 254, 58, 209, 5,
    244, 13, 165, 208, 241, 209, 47, 178, 208, 21, 236, 75, 244, 29, 216, 55, 71, 47, 224, 148, 133, 74, 78, 33, 212,
    145, 104, 2, 186, 214, 78, 125, 137, 113, 6, 102, 17, 108, 28, 162, 175, 19, 94, 252, 7, 129, 175, 120, 117, 93, 65,
    190, 246, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 };

static size_t xml_res_size_2 = 337;
static unsigned char xml_res_file_2[] = { 60, 63, 120, 109, 108, 32, 118, 101, 114, 115, 105, 111, 110, 61, 34, 49, 46,
    48, 34, 32, 101, 110, 99, 111, 100, 105, 110, 103, 61, 34, 85, 84, 70, 45, 56, 34, 63, 62, 10, 60, 114, 101, 115,
    111, 117, 114, 99, 101, 32, 120, 109, 108, 110, 115, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 119,
    120, 119, 105, 100, 103, 101, 116, 115, 46, 111, 114, 103, 47, 119, 120, 120, 114, 99, 34, 62, 10, 32, 32, 60, 33,
    45, 45, 32, 72, 97, 110, 100, 108, 101, 114, 32, 71, 101, 110, 101, 114, 97, 116, 105, 111, 110, 32, 105, 115, 32,
    79, 78, 32, 45, 45, 62, 10, 32, 32, 60, 111, 98, 106, 101, 99, 116, 32, 99, 108, 97, 115, 115, 61, 34, 119, 120, 66,
    105, 116, 109, 97, 112, 34, 32, 110, 97, 109, 101, 61, 34, 50, 52, 45, 99, 111, 112, 121, 34, 62, 119, 120, 99, 114,
    97, 102, 116, 101, 114, 95, 98, 105, 116, 109, 97, 112, 115, 46, 99, 112, 112, 36, 98, 105, 116, 109, 97, 112, 115,
    95, 112, 110, 103, 95, 50, 52, 45, 99, 111, 112, 121, 46, 112, 110, 103, 60, 47, 111, 98, 106, 101, 99, 116, 62, 10,
    32, 32, 60, 111, 98, 106, 101, 99, 116, 32, 99, 108, 97, 115, 115, 61, 34, 119, 120, 66, 105, 116, 109, 97, 112, 34,
    32, 110, 97, 109, 101, 61, 34, 50, 52, 45, 99, 111, 112, 121, 64, 50, 120, 34, 62, 119, 120, 99, 114, 97, 102, 116,
    101, 114, 95, 98, 105, 116, 109, 97, 112, 115, 46, 99, 112, 112, 36, 98, 105, 116, 109, 97, 112, 115, 95, 112, 110,
    103, 95, 50, 52, 45, 99, 111, 112, 121, 64, 50, 120, 46, 112, 110, 103, 60, 47, 111, 98, 106, 101, 99, 116, 62, 10,
    60, 47, 114, 101, 115, 111, 117, 114, 99, 101, 62, 10 };

void wxC9ED9InitBitmapResources()
{

    // Check for memory FS. If not present, load the handler:
    {
        wxMemoryFSHandler::AddFile(wxT("XRC_resource/dummy_file"), wxT("dummy one"));
        wxFileSystem fsys;
        wxFSFile* f = fsys.OpenFile(wxT("memory:XRC_resource/dummy_file"));
        wxMemoryFSHandler::RemoveFile(wxT("XRC_resource/dummy_file"));
        if(f)
            delete f;
        else
            wxFileSystem::AddHandler(new wxMemoryFSHandlerBase);
    }

    XRC_ADD_FILE(wxT("XRC_resource/wxcrafter_bitmaps.cpp$bitmaps_png_24-copy.png"), xml_res_file_0, xml_res_size_0,
        wxT("image/png"));
    XRC_ADD_FILE(wxT("XRC_resource/wxcrafter_bitmaps.cpp$bitmaps_png_24-copy@2x.png"), xml_res_file_1, xml_res_size_1,
        wxT("image/png"));
    XRC_ADD_FILE(wxT("XRC_resource/wxcrafter_bitmaps.cpp$_home_eran_devl_GitLite_GitLite_wxcrafter_bitmaps.xrc"),
        xml_res_file_2, xml_res_size_2, wxT("text/xml"));
    wxXmlResource::Get()->Load(
        wxT("memory:XRC_resource/wxcrafter_bitmaps.cpp$_home_eran_devl_GitLite_GitLite_wxcrafter_bitmaps.xrc"));
}
